# Default values for <CHARTNAME>.
# This is a YAML-formatted file.

# The overall system your service is a part of
system: <CHARTNAME>
# The name of your service
service: <CHARTNAME>
# The major version number for your service
version: 1

# Istio uses the service account name as a component of the service's security
# identity. Set "create" to false to use an previously created service account.
serviceAccount:
  name: <CHARTNAME>
  create: true

# The initial number of pod replicas to run for your service
replicaCount: 3
# The maximum number of pods from that set that can be unavailable at once
maxUnavailable: 1

# Horizontal pod autoscaler configuration (optional)
autoscaling:
  minReplicas: 2
  maxReplicas: 4
  targetAverageCpuUtilization: 80

# Docker settings
image:
  # The name of your docker container
  repository: XXXX
  # Your docker container's tag
  tag: YYYY
  imagePullPolicy: IfNotPresent

# Port settings
# Ports must be named <protocol>[-<suffix>] to work with Istio.
# Valid protocols are grpc, http, http2, https, mongo, mysql, redis, tcp, tls, udp
ports:
  - name: grpc-svc
    port: 8443
    targetPort: 8443
  - name: http-status
    port: 8080
    targetPort: 8080

configMap: # Optional
  # Where the config map should be mounted inside your container's filesystem.
  mountPath: /config/<CHARTNAME>-config
  fileName: config.yaml
  # Everything under content is copied verbatim into your service's configmap.
  content:
    key1: value1
    key2: value2

# Resource settings (use Kubernetes syntax)
# Optional
resources:
  requests:
    memory: "32Mi"
    cpu: "200m"
  limits:
    memory: "64Mi"
    cpu: "250M"

# Probe settings (use Kubernetes syntax)
# Optional
probes:
  livenessProbe:
    initialDelaySeconds: 30
    httpGet:
      path: /health
      port: 8080
  readinessProbe:
    timeoutSeconds: 10
    httpGet:
      path: /ready
      port: 8080
